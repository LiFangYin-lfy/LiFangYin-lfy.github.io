<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数组方法</title>
    <link href="undefined2019/12/11/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/"/>
    <url>2019/12/11/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="数组方法"><a href="#数组方法" class="headerlink" title="数组方法"></a>数组方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line">Array.map()</span><br><span class="line"></span><br><span class="line">此方法是将数组中的每个元素调用一个提供的函数，结果作为一个新的数组返回，并没有改变原来的数组</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5]</span><br><span class="line">    let newArr &#x3D; arr.map(x &#x3D;&gt; x*2)</span><br><span class="line">    &#x2F;&#x2F;arr&#x3D; [1, 2, 3, 4, 5]   原数组保持不变</span><br><span class="line">    &#x2F;&#x2F;newArr &#x3D; [2, 4, 6, 8, 10] 返回新数组</span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.forEach()</span><br><span class="line"></span><br><span class="line">此方法是将数组中的每个元素执行传进提供的函数，没有返回值，直接改变原数组，注意和map方法区分</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5]</span><br><span class="line">   num.forEach(x &#x3D;&gt; x*2)</span><br><span class="line">   &#x2F;&#x2F; arr &#x3D; [2, 4, 6, 8, 10]  数组改变,注意和map区分</span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.filter()</span><br><span class="line"></span><br><span class="line">此方法是将所有元素进行判断，将满足条件的元素作为一个新的数组返回</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5]</span><br><span class="line">    const isBigEnough &#x3D;&gt; value &#x3D;&gt; value &gt;&#x3D; 3</span><br><span class="line">    let newArr &#x3D; arr.filter(isBigEnough )</span><br><span class="line">    &#x2F;&#x2F;newNum &#x3D; [3, 4, 5] 满足条件的元素返回为一个新的数组</span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.every()</span><br><span class="line"></span><br><span class="line">此方法是将所有元素进行判断返回一个布尔值，如果所有元素都满足判断条件，则返回true，否则为false：</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5]</span><br><span class="line">    const isLessThan4 &#x3D;&gt; value &#x3D;&gt; value &lt; 4</span><br><span class="line">    const isLessThan6 &#x3D;&gt; value &#x3D;&gt; value &lt; 6</span><br><span class="line">    arr.every(isLessThan4 ) &#x2F;&#x2F;false</span><br><span class="line">    arr.every(isLessThan6 ) &#x2F;&#x2F;true</span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.some()</span><br><span class="line"></span><br><span class="line"> 此方法是将所有元素进行判断返回一个布尔值，如果存在元素都满足判断条件，则返回true，若所有元素都不满足判断条件，则返回false：</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">let arr&#x3D; [1, 2, 3, 4, 5]</span><br><span class="line">    const isLessThan4 &#x3D;&gt; value &#x3D;&gt; value &lt; 4</span><br><span class="line">    const isLessThan6 &#x3D;&gt; value &#x3D;&gt; value &gt; 6</span><br><span class="line">    arr.some(isLessThan4 ) &#x2F;&#x2F;true</span><br><span class="line">    arr.some(isLessThan6 ) &#x2F;&#x2F;false</span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.reduce()</span><br><span class="line"></span><br><span class="line"> 此方法是所有元素调用返回函数，返回值为最后结果,传入的值必须是函数类型：</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5]</span><br><span class="line">   const add &#x3D; (a, b) &#x3D;&gt; a + b</span><br><span class="line">   let sum &#x3D; arr.reduce(add)</span><br><span class="line">   &#x2F;&#x2F;sum &#x3D; 15  相当于累加的效果</span><br><span class="line">   与之相对应的还有一个 Array.reduceRight() 方法，区别是这个是从右向左操作的</span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.push()</span><br><span class="line"></span><br><span class="line"> 此方法是在数组的后面添加新加元素，此方法改变了数组的长度：</span><br><span class="line">   </span><br><span class="line">Array.pop()</span><br><span class="line"></span><br><span class="line"> 此方法在数组后面删除最后一个元素，并返回数组，此方法改变了数组的长度：</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5]</span><br><span class="line">    arr.pop()</span><br><span class="line">    console.log(arr) &#x2F;&#x2F;[1, 2, 3, 4]</span><br><span class="line">    console.log(arr.length) &#x2F;&#x2F;4</span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.shift()</span><br><span class="line"></span><br><span class="line"> 此方法在数组后面删除第一个元素，并返回数组，此方法改变了数组的长度：</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5]</span><br><span class="line">    arr.shift()</span><br><span class="line">    console.log(arr) &#x2F;&#x2F;[2, 3, 4, 5]</span><br><span class="line">    console.log(arr.length) &#x2F;&#x2F;4 </span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.unshift()</span><br><span class="line"></span><br><span class="line"> 此方法是将一个或多个元素添加到数组的开头，并返回新数组的长度：</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5]</span><br><span class="line">    arr.unshift(6, 7)</span><br><span class="line">    console.log(arr) &#x2F;&#x2F;[6, 7, 2, 3, 4, 5]</span><br><span class="line">    console.log(arr.length) &#x2F;&#x2F;7 </span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.isArray()</span><br><span class="line"></span><br><span class="line"> 判断一个对象是不是数组，返回的是布尔值</span><br><span class="line"> </span><br><span class="line">Array.concat()</span><br><span class="line"></span><br><span class="line"> 此方法是一个可以将多个数组拼接成一个数组：</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">let arr1 &#x3D; [1, 2, 3]</span><br><span class="line">      arr2 &#x3D; [4, 5]</span><br><span class="line">  let arr &#x3D; arr1.concat(arr2)</span><br><span class="line">  console.log(arr)&#x2F;&#x2F;[1, 2, 3, 4, 5]</span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.toString()</span><br><span class="line"></span><br><span class="line"> 此方法将数组转化为字符串：</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5];</span><br><span class="line">   let str &#x3D; arr.toString()</span><br><span class="line">   console.log(str)&#x2F;&#x2F; 1,2,3,4,5</span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">Array.join()</span><br><span class="line"></span><br><span class="line">  此方法也是将数组转化为字符串：</span><br><span class="line">　　</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5];</span><br><span class="line">   let str1 &#x3D; arr.toString()</span><br><span class="line">   let str2 &#x3D; arr.toString(&#39;,&#39;)</span><br><span class="line">   let str3 &#x3D; arr.toString(&#39;##&#39;)</span><br><span class="line">   console.log(str1)&#x2F;&#x2F; 12345</span><br><span class="line">   console.log(str2)&#x2F;&#x2F; 1,2,3,4,5</span><br><span class="line">   console.log(str3)&#x2F;&#x2F; 1##2##3##4##5</span><br><span class="line">　　</span><br><span class="line"></span><br><span class="line">通过例子可以看出和toString的区别，可以设置元素之间的间隔~ </span><br><span class="line">　　15.Array.splice(开始位置， 删除的个数，元素)</span><br><span class="line"></span><br><span class="line">   　　　　万能方法，可以实现增删改：</span><br><span class="line">　　　　　</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">let arr &#x3D; [1, 2, 3, 4, 5];</span><br><span class="line">     let arr1 &#x3D; arr.splice(2, 0 &#39;haha&#39;)</span><br><span class="line">     let arr2 &#x3D; arr.splice(2, 3)</span><br><span class="line">     let arr1 &#x3D; arr.splice(2, 1 &#39;haha&#39;)</span><br><span class="line">     console.log(arr1) &#x2F;&#x2F;[1, 2, &#39;haha&#39;, 3, 4, 5]新增一个元素</span><br><span class="line">     console.log(arr2) &#x2F;&#x2F;[1, 2] 删除三个元素</span><br><span class="line">     console.log(arr3) &#x2F;&#x2F;[1, 2, &#39;haha&#39;, 4, 5] 替换一个元素</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试哈</title>
    <link href="undefined2019/12/11/%E6%B5%8B%E8%AF%95%E5%93%88/"/>
    <url>2019/12/11/%E6%B5%8B%E8%AF%95%E5%93%88/</url>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world！</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="undefined2019/12/11/hello-world/"/>
    <url>2019/12/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>